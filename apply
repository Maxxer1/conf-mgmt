#!/bin/bash

# This script is meant to simplify merging the public and '-private' conf-mgmt
# files and then running a playbook matching hostname.

# Usage:
#   cd /root/src/conf-mgmt
#   ./apply

set -e
set -u

einfo() {
    echo "[INFO] >>> $*"
}

eerror() {
    echo "[ERROR] >>> $*" >&2
}

edie() {
    eerror "$*"
    exit 1
}

trap 'eerror "Error in $0 on line ${LINENO}."' ERR

HOSTNAME="$(hostname)"

# localhost.yml is just an example, never to be executed as-is.
if [ "${HOSTNAME}" == 'localhost' ]; then
    edie "Your hostname is set to 'localhost'. Change it to a proper one before running this script."
fi

if [ "${SSH_CLIENT:-}" ] && ! [ "${TMUX:-}" ]; then
    edie "Running over ssh and without tmux. Things may end up bad. Run under tmux."
fi

script_path="$(readlink -f "$0")"
work_dir="${script_path%/*}"

script_dir_name="${work_dir##*/}"

public_dir="${work_dir}"
private_dir="${work_dir}/../${script_dir_name}-private"
merged_dir="$(mktemp -d -t conf-mgmt-merged.XXXXX)"

test -d "${public_dir}"
test -d "${private_dir}"

einfo "Merging into ${merged_dir} ..."
rm -rf "${merged_dir}"
mkdir "${merged_dir}"
cp -nsr --preserve=mode,ownership "${public_dir}"/* "${merged_dir}"/
cp -nsr --preserve=mode,ownership "${private_dir}"/* "${merged_dir}"/

einfo "Running ${HOSTNAME}.yml playbook ..."
cd "${merged_dir}"
if [ -f "${HOSTNAME}".yml ]; then
    ./"${HOSTNAME}".yml "$@"
else
    edie "Missing playbook for the host ${HOSOTNAME}."
fi

einfo 'Cleaning merged directory ...'
rm -rf "${merged_dir}"
